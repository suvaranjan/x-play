const mongoose = require('mongoose');

const teamSchema = new mongoose.Schema({
    name: String,
    dof: Date,
    photos: [String],
    teamPoster: String,
    location: String,
    socialLinks: [{
        platform: String,
        link: String,
    }],
    description: String,
    email: String,
    phone: String,
    managers: [{ type: mongoose.Schema.Types.ObjectId, ref: 'User' }],
    createdBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User', required: true },
    reminders: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Reminder' }],
    titles: [String],
    homeField: String,
    coach: String,
    captain: String,
    bankInfo: {
        paynowNumber: String,
        bankCardNumber: String,
        bankNumber: String,
    },
    sponsor: String,
    sponsorPeriod: Date,
    hoursPlayingPerWeek: Number,
    players: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Player' }],
    joinRequests: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Player' }],
    value: Number,
    bankTopUp: Number,
    zGold: Number,
    level: Number,
    fanClub: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Fan' }],
    comments: [{ body: String, date: Date }],
    ratings: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Rating' }],
    endorsements: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Endorsement' }],
    successPass: Number,
    successPassDate: Date,
    totalTravelDistance: Number,
    totalTravelDistanceDate: Date,
    matchDates: [Date],
    scores: [Number],
    fairPlayRating: Number,
    strengthRating: Number,
    timeArrive: Date,
    goodRunnerAndPositioningRating: Number,
    goodDefenderRating: Number,
    aggressiveRating: Number,
    goodPressingRating: Number,
    failedPass: Number,
    failedPassDate: Date,
    unavailableDates: [{
        date: Date,
        description: String,
    }],
    socialInteractionHistory: [String],
    paymentHistory: [String],
    shoppingHistory: [String],
}, { timestamps: true });

module.exports = mongoose.model('Team', teamSchema);
